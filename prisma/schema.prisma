// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode      = "prisma"
}

model User {
  id                String  @id @default(uuid())
  username          String  @unique
  password          String
  name              String
  email             String
  phoneNumber       String
  profilePicture    String
  reviews       Review[]
  bookings      Booking[]
}

model Property {
  id              String  @id @default(uuid())
  hostId          String  @default(uuid())
  title           String  @default(uuid())
  description     String
  location        String
  pricePerNight   Decimal  @db.Decimal(10, 2)
  bedroomCount    Int
  bathRoomCount   Int
  maxGuestCount   Int
  rating          Int

  amenities       AmenityProperty[]
  bookings        Booking[]
  reviews         Review[]
  host            Host      @relation(fields: [hostId], references: [id])

  @@index([hostId])
}

model Booking {
  id              String  @id @default(uuid())
  userId          String  @default(uuid())
  propertyId      String  @default(uuid())
  checkinDate     DateTime
  checkoutDate    DateTime
  numberOfGuests  Int
  totalPrice      Int
  bookingStatus   String

  user            User     @relation(fields: [userId], references: [id])
  property        Property @relation(fields: [propertyId], references: [id])

  @@index([userId])
  @@index([propertyId])
}

model Review {
  id              String  @id @default(uuid())
  userId          String
  propertyId      String  @default(uuid())
  rating          Int
  comment         String

  user            User     @relation(fields: [userId], references: [id])
  property        Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([propertyId])
}



model Amenity {
  id              String  @id @default(uuid())
  name            String  @default(uuid())

  properties      AmenityProperty[]
}

model AmenityProperty {
  amenityId       String
  propertyId      String

  amenity         Amenity @relation(fields: [amenityId], references: [id])
  property        Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@id([amenityId, propertyId])
  @@index([amenityId])
  @@index([propertyId])
}

model Host {
  id                String  @id @default(uuid())
  username          String  @unique
  password          String
  name              String
  email             String
  phoneNumber       String
  profilePicture    String
  aboutMe           String
  listings          Property[]
}